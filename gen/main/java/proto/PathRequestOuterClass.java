// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pathRequest.proto

package proto;

public final class PathRequestOuterClass {
  private PathRequestOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface PathRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.PathRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated double x = 1;</code>
     */
    java.util.List<java.lang.Double> getXList();
    /**
     * <code>repeated double x = 1;</code>
     */
    int getXCount();
    /**
     * <code>repeated double x = 1;</code>
     */
    double getX(int index);

    /**
     * <code>repeated double y = 2;</code>
     */
    java.util.List<java.lang.Double> getYList();
    /**
     * <code>repeated double y = 2;</code>
     */
    int getYCount();
    /**
     * <code>repeated double y = 2;</code>
     */
    double getY(int index);

    /**
     * <code>repeated double theta = 3;</code>
     */
    java.util.List<java.lang.Double> getThetaList();
    /**
     * <code>repeated double theta = 3;</code>
     */
    int getThetaCount();
    /**
     * <code>repeated double theta = 3;</code>
     */
    double getTheta(int index);

    /**
     * <code>required int32 dt = 4;</code>
     */
    boolean hasDt();
    /**
     * <code>required int32 dt = 4;</code>
     */
    int getDt();

    /**
     * <code>required double maxVel = 5;</code>
     */
    boolean hasMaxVel();
    /**
     * <code>required double maxVel = 5;</code>
     */
    double getMaxVel();

    /**
     * <code>required double maxAccel = 6;</code>
     */
    boolean hasMaxAccel();
    /**
     * <code>required double maxAccel = 6;</code>
     */
    double getMaxAccel();

    /**
     * <code>required double maxJerk = 7;</code>
     */
    boolean hasMaxJerk();
    /**
     * <code>required double maxJerk = 7;</code>
     */
    double getMaxJerk();
  }
  /**
   * Protobuf type {@code proto.PathRequest}
   */
  public static final class PathRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:proto.PathRequest)
      PathRequestOrBuilder {
    // Use PathRequest.newBuilder() to construct.
    private PathRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PathRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PathRequest defaultInstance;
    public static PathRequest getDefaultInstance() {
      return defaultInstance;
    }

    public PathRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PathRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                x_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000001;
              }
              x_.add(input.readDouble());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                x_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                x_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 17: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                y_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000002;
              }
              y_.add(input.readDouble());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                y_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                y_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 25: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                theta_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000004;
              }
              theta_.add(input.readDouble());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                theta_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                theta_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000001;
              dt_ = input.readInt32();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000002;
              maxVel_ = input.readDouble();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000004;
              maxAccel_ = input.readDouble();
              break;
            }
            case 57: {
              bitField0_ |= 0x00000008;
              maxJerk_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          x_ = java.util.Collections.unmodifiableList(x_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          y_ = java.util.Collections.unmodifiableList(y_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          theta_ = java.util.Collections.unmodifiableList(theta_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.PathRequestOuterClass.internal_static_proto_PathRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.PathRequestOuterClass.internal_static_proto_PathRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.PathRequestOuterClass.PathRequest.class, proto.PathRequestOuterClass.PathRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<PathRequest> PARSER =
        new com.google.protobuf.AbstractParser<PathRequest>() {
      public PathRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PathRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PathRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int X_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Double> x_;
    /**
     * <code>repeated double x = 1;</code>
     */
    public java.util.List<java.lang.Double>
        getXList() {
      return x_;
    }
    /**
     * <code>repeated double x = 1;</code>
     */
    public int getXCount() {
      return x_.size();
    }
    /**
     * <code>repeated double x = 1;</code>
     */
    public double getX(int index) {
      return x_.get(index);
    }

    public static final int Y_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Double> y_;
    /**
     * <code>repeated double y = 2;</code>
     */
    public java.util.List<java.lang.Double>
        getYList() {
      return y_;
    }
    /**
     * <code>repeated double y = 2;</code>
     */
    public int getYCount() {
      return y_.size();
    }
    /**
     * <code>repeated double y = 2;</code>
     */
    public double getY(int index) {
      return y_.get(index);
    }

    public static final int THETA_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Double> theta_;
    /**
     * <code>repeated double theta = 3;</code>
     */
    public java.util.List<java.lang.Double>
        getThetaList() {
      return theta_;
    }
    /**
     * <code>repeated double theta = 3;</code>
     */
    public int getThetaCount() {
      return theta_.size();
    }
    /**
     * <code>repeated double theta = 3;</code>
     */
    public double getTheta(int index) {
      return theta_.get(index);
    }

    public static final int DT_FIELD_NUMBER = 4;
    private int dt_;
    /**
     * <code>required int32 dt = 4;</code>
     */
    public boolean hasDt() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 dt = 4;</code>
     */
    public int getDt() {
      return dt_;
    }

    public static final int MAXVEL_FIELD_NUMBER = 5;
    private double maxVel_;
    /**
     * <code>required double maxVel = 5;</code>
     */
    public boolean hasMaxVel() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required double maxVel = 5;</code>
     */
    public double getMaxVel() {
      return maxVel_;
    }

    public static final int MAXACCEL_FIELD_NUMBER = 6;
    private double maxAccel_;
    /**
     * <code>required double maxAccel = 6;</code>
     */
    public boolean hasMaxAccel() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required double maxAccel = 6;</code>
     */
    public double getMaxAccel() {
      return maxAccel_;
    }

    public static final int MAXJERK_FIELD_NUMBER = 7;
    private double maxJerk_;
    /**
     * <code>required double maxJerk = 7;</code>
     */
    public boolean hasMaxJerk() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required double maxJerk = 7;</code>
     */
    public double getMaxJerk() {
      return maxJerk_;
    }

    private void initFields() {
      x_ = java.util.Collections.emptyList();
      y_ = java.util.Collections.emptyList();
      theta_ = java.util.Collections.emptyList();
      dt_ = 0;
      maxVel_ = 0D;
      maxAccel_ = 0D;
      maxJerk_ = 0D;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasDt()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMaxVel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMaxAccel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMaxJerk()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < x_.size(); i++) {
        output.writeDouble(1, x_.get(i));
      }
      for (int i = 0; i < y_.size(); i++) {
        output.writeDouble(2, y_.get(i));
      }
      for (int i = 0; i < theta_.size(); i++) {
        output.writeDouble(3, theta_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(4, dt_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(5, maxVel_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(6, maxAccel_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(7, maxJerk_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        dataSize = 8 * getXList().size();
        size += dataSize;
        size += 1 * getXList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getYList().size();
        size += dataSize;
        size += 1 * getYList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getThetaList().size();
        size += dataSize;
        size += 1 * getThetaList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, dt_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, maxVel_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, maxAccel_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, maxJerk_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static proto.PathRequestOuterClass.PathRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.PathRequestOuterClass.PathRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.PathRequestOuterClass.PathRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.PathRequestOuterClass.PathRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.PathRequestOuterClass.PathRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static proto.PathRequestOuterClass.PathRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static proto.PathRequestOuterClass.PathRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static proto.PathRequestOuterClass.PathRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static proto.PathRequestOuterClass.PathRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static proto.PathRequestOuterClass.PathRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(proto.PathRequestOuterClass.PathRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code proto.PathRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.PathRequest)
        proto.PathRequestOuterClass.PathRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.PathRequestOuterClass.internal_static_proto_PathRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.PathRequestOuterClass.internal_static_proto_PathRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.PathRequestOuterClass.PathRequest.class, proto.PathRequestOuterClass.PathRequest.Builder.class);
      }

      // Construct using proto.PathRequestOuterClass.PathRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        x_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        theta_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        dt_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        maxVel_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        maxAccel_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        maxJerk_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.PathRequestOuterClass.internal_static_proto_PathRequest_descriptor;
      }

      public proto.PathRequestOuterClass.PathRequest getDefaultInstanceForType() {
        return proto.PathRequestOuterClass.PathRequest.getDefaultInstance();
      }

      public proto.PathRequestOuterClass.PathRequest build() {
        proto.PathRequestOuterClass.PathRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public proto.PathRequestOuterClass.PathRequest buildPartial() {
        proto.PathRequestOuterClass.PathRequest result = new proto.PathRequestOuterClass.PathRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          x_ = java.util.Collections.unmodifiableList(x_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.x_ = x_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          y_ = java.util.Collections.unmodifiableList(y_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.y_ = y_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          theta_ = java.util.Collections.unmodifiableList(theta_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.theta_ = theta_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000001;
        }
        result.dt_ = dt_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000002;
        }
        result.maxVel_ = maxVel_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000004;
        }
        result.maxAccel_ = maxAccel_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000008;
        }
        result.maxJerk_ = maxJerk_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.PathRequestOuterClass.PathRequest) {
          return mergeFrom((proto.PathRequestOuterClass.PathRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.PathRequestOuterClass.PathRequest other) {
        if (other == proto.PathRequestOuterClass.PathRequest.getDefaultInstance()) return this;
        if (!other.x_.isEmpty()) {
          if (x_.isEmpty()) {
            x_ = other.x_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureXIsMutable();
            x_.addAll(other.x_);
          }
          onChanged();
        }
        if (!other.y_.isEmpty()) {
          if (y_.isEmpty()) {
            y_ = other.y_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureYIsMutable();
            y_.addAll(other.y_);
          }
          onChanged();
        }
        if (!other.theta_.isEmpty()) {
          if (theta_.isEmpty()) {
            theta_ = other.theta_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureThetaIsMutable();
            theta_.addAll(other.theta_);
          }
          onChanged();
        }
        if (other.hasDt()) {
          setDt(other.getDt());
        }
        if (other.hasMaxVel()) {
          setMaxVel(other.getMaxVel());
        }
        if (other.hasMaxAccel()) {
          setMaxAccel(other.getMaxAccel());
        }
        if (other.hasMaxJerk()) {
          setMaxJerk(other.getMaxJerk());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDt()) {
          
          return false;
        }
        if (!hasMaxVel()) {
          
          return false;
        }
        if (!hasMaxAccel()) {
          
          return false;
        }
        if (!hasMaxJerk()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.PathRequestOuterClass.PathRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.PathRequestOuterClass.PathRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Double> x_ = java.util.Collections.emptyList();
      private void ensureXIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          x_ = new java.util.ArrayList<java.lang.Double>(x_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated double x = 1;</code>
       */
      public java.util.List<java.lang.Double>
          getXList() {
        return java.util.Collections.unmodifiableList(x_);
      }
      /**
       * <code>repeated double x = 1;</code>
       */
      public int getXCount() {
        return x_.size();
      }
      /**
       * <code>repeated double x = 1;</code>
       */
      public double getX(int index) {
        return x_.get(index);
      }
      /**
       * <code>repeated double x = 1;</code>
       */
      public Builder setX(
          int index, double value) {
        ensureXIsMutable();
        x_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double x = 1;</code>
       */
      public Builder addX(double value) {
        ensureXIsMutable();
        x_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double x = 1;</code>
       */
      public Builder addAllX(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureXIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, x_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double x = 1;</code>
       */
      public Builder clearX() {
        x_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Double> y_ = java.util.Collections.emptyList();
      private void ensureYIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          y_ = new java.util.ArrayList<java.lang.Double>(y_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated double y = 2;</code>
       */
      public java.util.List<java.lang.Double>
          getYList() {
        return java.util.Collections.unmodifiableList(y_);
      }
      /**
       * <code>repeated double y = 2;</code>
       */
      public int getYCount() {
        return y_.size();
      }
      /**
       * <code>repeated double y = 2;</code>
       */
      public double getY(int index) {
        return y_.get(index);
      }
      /**
       * <code>repeated double y = 2;</code>
       */
      public Builder setY(
          int index, double value) {
        ensureYIsMutable();
        y_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double y = 2;</code>
       */
      public Builder addY(double value) {
        ensureYIsMutable();
        y_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double y = 2;</code>
       */
      public Builder addAllY(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureYIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, y_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double y = 2;</code>
       */
      public Builder clearY() {
        y_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Double> theta_ = java.util.Collections.emptyList();
      private void ensureThetaIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          theta_ = new java.util.ArrayList<java.lang.Double>(theta_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated double theta = 3;</code>
       */
      public java.util.List<java.lang.Double>
          getThetaList() {
        return java.util.Collections.unmodifiableList(theta_);
      }
      /**
       * <code>repeated double theta = 3;</code>
       */
      public int getThetaCount() {
        return theta_.size();
      }
      /**
       * <code>repeated double theta = 3;</code>
       */
      public double getTheta(int index) {
        return theta_.get(index);
      }
      /**
       * <code>repeated double theta = 3;</code>
       */
      public Builder setTheta(
          int index, double value) {
        ensureThetaIsMutable();
        theta_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double theta = 3;</code>
       */
      public Builder addTheta(double value) {
        ensureThetaIsMutable();
        theta_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double theta = 3;</code>
       */
      public Builder addAllTheta(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureThetaIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, theta_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double theta = 3;</code>
       */
      public Builder clearTheta() {
        theta_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private int dt_ ;
      /**
       * <code>required int32 dt = 4;</code>
       */
      public boolean hasDt() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 dt = 4;</code>
       */
      public int getDt() {
        return dt_;
      }
      /**
       * <code>required int32 dt = 4;</code>
       */
      public Builder setDt(int value) {
        bitField0_ |= 0x00000008;
        dt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 dt = 4;</code>
       */
      public Builder clearDt() {
        bitField0_ = (bitField0_ & ~0x00000008);
        dt_ = 0;
        onChanged();
        return this;
      }

      private double maxVel_ ;
      /**
       * <code>required double maxVel = 5;</code>
       */
      public boolean hasMaxVel() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required double maxVel = 5;</code>
       */
      public double getMaxVel() {
        return maxVel_;
      }
      /**
       * <code>required double maxVel = 5;</code>
       */
      public Builder setMaxVel(double value) {
        bitField0_ |= 0x00000010;
        maxVel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double maxVel = 5;</code>
       */
      public Builder clearMaxVel() {
        bitField0_ = (bitField0_ & ~0x00000010);
        maxVel_ = 0D;
        onChanged();
        return this;
      }

      private double maxAccel_ ;
      /**
       * <code>required double maxAccel = 6;</code>
       */
      public boolean hasMaxAccel() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required double maxAccel = 6;</code>
       */
      public double getMaxAccel() {
        return maxAccel_;
      }
      /**
       * <code>required double maxAccel = 6;</code>
       */
      public Builder setMaxAccel(double value) {
        bitField0_ |= 0x00000020;
        maxAccel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double maxAccel = 6;</code>
       */
      public Builder clearMaxAccel() {
        bitField0_ = (bitField0_ & ~0x00000020);
        maxAccel_ = 0D;
        onChanged();
        return this;
      }

      private double maxJerk_ ;
      /**
       * <code>required double maxJerk = 7;</code>
       */
      public boolean hasMaxJerk() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required double maxJerk = 7;</code>
       */
      public double getMaxJerk() {
        return maxJerk_;
      }
      /**
       * <code>required double maxJerk = 7;</code>
       */
      public Builder setMaxJerk(double value) {
        bitField0_ |= 0x00000040;
        maxJerk_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double maxJerk = 7;</code>
       */
      public Builder clearMaxJerk() {
        bitField0_ = (bitField0_ & ~0x00000040);
        maxJerk_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:proto.PathRequest)
    }

    static {
      defaultInstance = new PathRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:proto.PathRequest)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_PathRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_proto_PathRequest_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021pathRequest.proto\022\005proto\"q\n\013PathReques" +
      "t\022\t\n\001x\030\001 \003(\001\022\t\n\001y\030\002 \003(\001\022\r\n\005theta\030\003 \003(\001\022\n" +
      "\n\002dt\030\004 \002(\005\022\016\n\006maxVel\030\005 \002(\001\022\020\n\010maxAccel\030\006" +
      " \002(\001\022\017\n\007maxJerk\030\007 \002(\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_proto_PathRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_proto_PathRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_proto_PathRequest_descriptor,
        new java.lang.String[] { "X", "Y", "Theta", "Dt", "MaxVel", "MaxAccel", "MaxJerk", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
